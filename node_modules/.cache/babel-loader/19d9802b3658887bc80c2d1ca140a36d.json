{"ast":null,"code":"var _jsxFileName = \"/Users/sincheolmin/dev/js/reactProject/SIMPLEDIARY/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\"; // https://jsonplaceholder.typicode.com/comments\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getData = async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n  console.log(res);\n};\n\nuseEffect(() => {\n  getData();\n}, []); // const dummyList = [\n//   {\n//     id: 1,\n//     author: \"신철민\",\n//     content: \"하이\",\n//     emotion: 1,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 2,\n//     author: \"아무개\",\n//     content: \"하이2\",\n//     emotion: 2,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 3,\n//     author: \"정진호\",\n//     content: \"하이3\",\n//     emotion: 3,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 4,\n//     author: \"허경영\",\n//     content: \"하이4\",\n//     emotion: 4,\n//     created_date: new Date().getTime(),\n//   },\n// ];\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = targetId => {\n    console.log(`${targetId}가 삭제 되었습니다.`);\n    const newDiaryList = data.filter(i => i.id !== targetId);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(i => i.id === targetId ? { ...i,\n      content: newContent\n    } : i));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sincheolmin/dev/js/reactProject/SIMPLEDIARY/src/App.js"],"names":["useEffect","useRef","useState","DiaryEditor","DiaryList","getData","res","fetch","then","json","console","log","App","data","setData","dataId","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","newDiaryList","filter","i","onEdit","newContent","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;;;AAEA,MAAMC,OAAO,GAAG,YAAY;AAC1B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAL,CAAuDC,IAAvD,CACfF,GAAD,IAASA,GAAG,CAACG,IAAJ,EADO,CAAlB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACD,CALD;;AAOAN,SAAS,CAAC,MAAM;AACdK,EAAAA,OAAO;AACR,CAFQ,EAEN,EAFM,CAAT,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASO,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMa,MAAM,GAAGd,MAAM,CAAC,CAAD,CAArB;;AAEA,QAAMe,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,KAA8B;AAC7C,UAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AAEA,UAAMC,OAAO,GAAG;AACdN,MAAAA,MADc;AAEdC,MAAAA,OAFc;AAGdC,MAAAA,OAHc;AAIdC,MAAAA,YAJc;AAKdI,MAAAA,EAAE,EAAET,MAAM,CAACU;AALG,KAAhB;AAQAV,IAAAA,MAAM,CAACU,OAAP,IAAkB,CAAlB;AACAX,IAAAA,OAAO,CAAC,CAACS,OAAD,EAAU,GAAGV,IAAb,CAAD,CAAP;AACD,GAbD;;AAeA,QAAMa,QAAQ,GAAIC,QAAD,IAAc;AAC7BjB,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEgB,QAAS,aAAxB;AACA,UAAMC,YAAY,GAAGf,IAAI,CAACgB,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASG,QAA5B,CAArB;AAEAb,IAAAA,OAAO,CAACc,YAAD,CAAP;AACD,GALD;;AAOA,QAAMG,MAAM,GAAG,CAACJ,QAAD,EAAWK,UAAX,KAA0B;AACvClB,IAAAA,OAAO,CACLD,IAAI,CAACoB,GAAL,CAAUH,CAAD,IAAQA,CAAC,CAACN,EAAF,KAASG,QAAT,GAAoB,EAAE,GAAGG,CAAL;AAAQZ,MAAAA,OAAO,EAAEc;AAAjB,KAApB,GAAoDF,CAArE,CADK,CAAP;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEe,MAAnB;AAA2B,MAAA,QAAQ,EAAEL,QAArC;AAA+C,MAAA,SAAS,EAAEb;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvCQD,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEditor\";\nimport DiaryList from \"./DiaryList\";\n\n// https://jsonplaceholder.typicode.com/comments\n\nconst getData = async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(\n    (res) => res.json()\n  );\n  console.log(res);\n};\n\nuseEffect(() => {\n  getData();\n}, []);\n// const dummyList = [\n//   {\n//     id: 1,\n//     author: \"신철민\",\n//     content: \"하이\",\n//     emotion: 1,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 2,\n//     author: \"아무개\",\n//     content: \"하이2\",\n//     emotion: 2,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 3,\n//     author: \"정진호\",\n//     content: \"하이3\",\n//     emotion: 3,\n//     created_date: new Date().getTime(),\n//   },\n//   {\n//     id: 4,\n//     author: \"허경영\",\n//     content: \"하이4\",\n//     emotion: 4,\n//     created_date: new Date().getTime(),\n//   },\n// ];\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = (targetId) => {\n    console.log(`${targetId}가 삭제 되었습니다.`);\n    const newDiaryList = data.filter((i) => i.id !== targetId);\n\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((i) => (i.id === targetId ? { ...i, content: newContent } : i))\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}